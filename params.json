{"name":"Francis Crimmins","tagline":"I am a software engineer that specialises in combining ideas from the research and open source worlds to create new products and systems.","body":"## Summary (Bio)\r\nI have designed and developed a 100 million page web crawler, recommender systems, a program for detecting \"spikes\" and related queries in search engine logs and a text miner for definitions from web pages.\r\n\r\nI have previously worked as one of the founders of [Funnelback](http://funnelback.com/), a search technology company with blue chip clients like Skype, Rolls Royce and Cambridge University. Prior to that I was a Research Engineer at Australia's national research agency, the [CSIRO](http://csiro.au/).\r\n\r\n## Portfolio\r\n\r\nAll of the systems or features shown in this portfolio were self-initiated, designed and implemented by me, unless otherwise stated.\r\n\r\n### Event Mining\r\nI designed and developed the \"[EventMiner](http://lucidworks.com/blog/mining-events-recommendations/)\" system for mining relationships from \"event\" logs for [Lucidworks](http://lucidworks.com/) in California. The program generates a co-occurrence matrix from the raw event logs and then produces a graph from the matrix which encodes the relationships between users, sessions, queries and documents. The graph is encoded and stored in Solr, with a set of standard graph API calls then being implemented as a front end to Solr.\r\n\r\nThe service can then navigate the \"[neighbourhood graph](https://en.wikipedia.org/wiki/Neighbourhood_%28graph_theory%29)\" for an input item: \r\n\r\n![Graph Navigation Example](../images/sample-user-id-graph.png)\r\n\r\nto generate more diverse and high-quality recommendations:\r\n\r\n![Popularity vs. Graph-Based Recommendations](../images/Popularity-Based-vs-Graph-Based.png)\r\n\r\n### Query Spikes and Related Queries\r\n\r\n![Query spikes and related queries screenshot](../images/query-spikes-and-related-queries.png)\r\n\r\nI was the original designer of the Funnelback \"Pattern Analyser\" system. This can detect \"[spikes](http://docs.funnelback.com/trend_alerts_reports.html)\" in the time series query log data, where these spikes are usually caused by some external event (e.g. a news story). I also designed and implemented a system to automatically detect related queries, based on their click patterns. This can be used to group queries which have no terms in common but have the same semantics.\r\n\r\n### Recommender Systems\r\nExample of recommended \"similar items\" overlaid over a StackOverflow question:\r\n\r\n![StackoverFlow Recommender Screenshot](../images/stackoverflow-similar-items.png)\r\n\r\nI designed and implemented a recommender algorithm for Funnelback which combines information from multiple sources, such as \"co-clicks\", \"related clicks\", \"related results\" etc. For more details, please see the [Funnelback Recommender System Documentation](http://docs.funnelback.com/recommendations.html).\r\n\r\n### Web Crawling and Graph Analysis\r\nExample visualization of a web crawl:\r\n\r\n![Graph visualisation](../images/website-graph.png)\r\n\r\nI was the original designer and developer of the Funnelback web crawler, which was designed to minimise resource usage (memory, storage etc.) while crawling 100s of millions of web pages. This software has been in continuous use in hosted and installed sites for over 15 years. I have also done work on analysing crawl link graphs and how \"annotations\" like queries, clicks and anchortext can be used to enrich the dataset for other applications (including Analytics and Data Mining).\r\n\r\n### Text Mining\r\nExample of extraction of definitions from text:\r\n\r\n![Graph visualisation](../images/text-mining-example.png)\r\n\r\nI am the creator of a \"[text mining](http://docs.funnelback.com/text_mining.html)\" system which uses syntactic patterns to extract definitions for phrases and acronyms. When those terms are used as a query the definition can be displayed at the top of the search results, with a link back to the page that contained the original definition.\r\n\r\n## Key Skills\r\n* Information Retrieval & Search\r\n* Machine Learning\r\n* Data Mining\r\n* Analytics\r\n* Distributed Systems\r\n* NoSQL\r\n* Relational Databases\r\n* API Design\r\n* Java\r\n* Python\r\n* JavaScript\r\n\r\n## Education\r\n* M.Sc. in Information Retrieval, [Dublin City University](http://dcu.ie/computing/index.shtml) (1996 - 1998)\r\n* B.Sc. in Computer Applications (1st class honours), DCU (1992 - 1996)\r\n\r\n## Contact\r\n* Email: francis.crimmins @ gmail.com\r\n* Twitter: https://twitter.com/franciscrimmins\r\n* LinkedIn: [https://www.linkedin.com/in/franciscrimmins](https://www.linkedin.com/in/franciscrimmins)\r\n* GitHub: [http://franciscrimmins.github.io/] (http://franciscrimmins.github.io/)\r\n\r\n### Disclaimer\r\nThis is a personal site and does not necessarily reflect the views or opinions of any of my previous employers or organisations I have done contracted development for. Details on example systems shown above refer to publicly available information from the official documentation sites for companies such as [Lucidworks](https://docs.lucidworks.com/display/fusion/Aggregations#Aggregations-EventMinerAggregator) and [Funnelback](http://docs.funnelback.com/).","google":"UA-66289168-1","note":"Don't delete this file! It's used internally to help with page regeneration."}